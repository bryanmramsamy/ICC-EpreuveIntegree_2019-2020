version: '3.8'

services:
  web:
    container_name: serina_web
    build:
      context: ./serina-project
      dockerfile: Dockerfile.prod
    image: registry.gitlab.com/bryanmramsamy/icc-epreuveintegree_2019-2020

    networks:
      - serina_network
    depends_on:
      - db
    restart: always
    expose:
      - 8000

    volumes:
      - type: volume
        source: web_media_volume
        target: /home/app/web/media

      - type: volume
        source: web_static_volume
        target: /home/app/web/static

    env_file:
      - .env.staging

    command: gunicorn serina.wsgi:application --bind 0.0.0.0:8000


  db:
    container_name: serina_db
    image: registry.gitlab.com/bryanmramsamy/icc-epreuveintegree_2019-2020/db

    networks:
      - serina_network
    restart: always

    volumes:
      - type: volume
        source: postgres_database_staging
        target: /var/lib/postgresql/data

    env_file:
      - .env.staging.db


  nginx-proxy:
    container_name: nginx-proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: registry.gitlab.com/bryanmramsamy/icc-epreuveintegree_2019-2020/nginx-proxy

    networks:
      - serina_network
    depends_on:
      - web
    restart: always
    ports:
      - 80:80
      - 443:443

    volumes:
      - type: volume
        source: web_media_volume
        target: /home/app/web/media

      - type: volume
        source: web_static_volume
        target: /home/app/web/static

      - type: volume
        source: certs
        target: /etc/nginx/certs

      - type: volume
        source: html
        target: /usr/share/nginx/html

      - type: volume
        source: vhost
        target: /etc/nginx/vhost.d

      - type: bind
        source: /var/run/docker.sock
        target: /tmp/docker.sock
        read_only: true


  ngnix-proxy-letsencrypt:
    image: registry.gitlab.com/bryanmramsamy/icc-epreuveintegree_2019-2020/ngnix-proxy-letsencrypt

    networks:
      - serina_network
    depends_on:
      - nginx-proxy

    volumes:
      - type: volume
        source: certs
        target: /etc/nginx/certs

      - type: volume
        source: html
        target: /usr/share/nginx/html

      - type: volume
        source: vhost
        target: /etc/nginx/vhost.d

      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true

    env_file:
      - .env.staging.proxy-companion


networks:
  serina_network:


volumes:
  web_media_volume:
  web_static_volume:
  postgres_database_staging:
  certs:
  html:
  vhost:
