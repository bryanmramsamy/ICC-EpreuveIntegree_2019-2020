###########
# BUILDER #
###########

# Pull official python image

FROM python:3.8 as builder

# Create and set work directory

WORKDIR /usr/src/app


# Set environnement variables

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1


# Update apt and install apt dependencies

RUN apt update -y
RUN apt install netcat -y


# Upgrade pip and lint

RUN pip install --upgrade pip
# RUN pip install flake8
# COPY . .
# RUN flake8 --ignore=E501,F401 .


# Install pip dependencies

COPY requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########


# Pull official python image

FROM python:3.8


# Create directory for the app user

RUN mkdir -p /home/app


# Create the app user

# RUN addgroup --system app && adduser --system app --group app
RUN groupadd app && useradd -g app -s /bin/bash app


# Create the appropriate directories

ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/media
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME


# Install dependencies

RUN apt update && apt install libpq-dev netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*


# Copy entrypoint-prod.sh

COPY ./entrypoint.prod.sh $APP_HOME


# Make entrypoint executable

RUN ["chmod", "+x", "/home/app/web/entrypoint.prod.sh"]


# Copy project

COPY . $APP_HOME


# Chown all the files to the app user

RUN chown -R app:app $APP_HOME


# Change to the app user

USER app


# Run entrypoint.prod.sh

ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
