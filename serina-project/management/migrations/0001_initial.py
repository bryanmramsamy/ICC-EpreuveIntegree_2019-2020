# Generated by Django 3.0.8 on 2020-08-07 18:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Updated on')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('reference', models.CharField(blank=True, max_length=7, unique=True, verbose_name='Reference')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('recommended_capacity', models.PositiveIntegerField(verbose_name='Recommended capacity')),
                ('max_capacity', models.PositiveIntegerField(verbose_name='Maximum capacity')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_classroom', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Classroom',
                'verbose_name_plural': 'Classrooms',
                'ordering': ('name', 'reference'),
            },
        ),
        migrations.CreateModel(
            name='ModuleLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Updated on')),
                ('rank', models.PositiveIntegerField(unique=True, verbose_name='Rank')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_modulelevel', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Module level',
                'verbose_name_plural': 'Module levels',
                'ordering': ('rank',),
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Updated on')),
                ('title', models.CharField(max_length=255, verbose_name='Module')),
                ('reference', models.CharField(blank=True, max_length=7, unique=True, verbose_name='Reference')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('ECTS_value', models.PositiveIntegerField(blank=True, null=True, verbose_name='ECTS value')),
                ('cost', models.FloatField(null=True, verbose_name='Cost')),
                ('charge_price', models.FloatField(null=True, verbose_name='Charge price')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_module', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('eligible_teachers', models.ManyToManyField(blank=True, related_name='teachable_modules', to=settings.AUTH_USER_MODEL, verbose_name='Eligible teachers')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modules', to='management.ModuleLevel', verbose_name='Difficultiy level')),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='postrequisites', to='management.Module', verbose_name='Prerequisites')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ('title', 'reference'),
            },
        ),
        migrations.CreateModel(
            name='DegreeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Updated on')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_degreecategory', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Degree category',
                'verbose_name_plural': 'Degree categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Updated on')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('reference', models.CharField(blank=True, max_length=7, unique=True, verbose_name='Reference')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='degrees', to='management.DegreeCategory', verbose_name='Category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_degree', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modules', models.ManyToManyField(related_name='degrees', to='management.Module', verbose_name='Modules')),
            ],
            options={
                'verbose_name': 'Degree',
                'verbose_name_plural': 'Degrees',
                'ordering': ('title', 'reference'),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Updated on')),
                ('reference', models.CharField(blank=True, max_length=11, unique=True, verbose_name='Reference')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('nb_registrants', models.PositiveIntegerField(default=0, verbose_name='Amount of registrants')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_course', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='management.Module', verbose_name='Modules')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='management.Classroom', verbose_name='Classroom')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teaches', to=settings.AUTH_USER_MODEL, verbose_name='Teached by')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ('date_start', 'reference'),
            },
        ),
    ]
